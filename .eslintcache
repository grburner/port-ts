[{"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/index.tsx":"1","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/App.tsx":"2","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Contact/index.tsx":"3","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Hero/index.tsx":"4","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/AboutMe/index.tsx":"5","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/NavBar/index.tsx":"6","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectGroup/index.tsx":"7","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/IconRow/index.tsx":"8","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectImage/index.tsx":"9","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectIcons/index.tsx":"10","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectDesc/index.tsx":"11","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectGoTo/index.tsx":"12","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/utils/context.tsx":"13","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectRenderer/index.tsx":"14","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ArrowBar/index.tsx":"15","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ReviewGroup/index.tsx":"16","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Review/index.tsx":"17","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/CollapsibleContact/index.tsx":"18"},{"size":218,"mtime":1608222729780,"results":"19","hashOfConfig":"20"},{"size":1176,"mtime":1632934277411,"results":"21","hashOfConfig":"20"},{"size":868,"mtime":1632945274333,"results":"22","hashOfConfig":"20"},{"size":432,"mtime":1632942365953,"results":"23","hashOfConfig":"20"},{"size":1578,"mtime":1632958366286,"results":"24","hashOfConfig":"20"},{"size":1363,"mtime":1632947782670,"results":"25","hashOfConfig":"20"},{"size":1168,"mtime":1632944236039,"results":"26","hashOfConfig":"20"},{"size":950,"mtime":1632945036141,"results":"27","hashOfConfig":"20"},{"size":973,"mtime":1632935864959,"results":"28","hashOfConfig":"20"},{"size":1266,"mtime":1632927178846,"results":"29","hashOfConfig":"20"},{"size":1029,"mtime":1632925783969,"results":"30","hashOfConfig":"20"},{"size":790,"mtime":1632934511714,"results":"31","hashOfConfig":"20"},{"size":372,"mtime":1609104155013,"results":"32","hashOfConfig":"20"},{"size":611,"mtime":1632925579108,"results":"33","hashOfConfig":"20"},{"size":1659,"mtime":1632934199236,"results":"34","hashOfConfig":"20"},{"size":703,"mtime":1610037611428,"results":"35","hashOfConfig":"20"},{"size":384,"mtime":1610034745059,"results":"36","hashOfConfig":"20"},{"size":707,"mtime":1610501657155,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5n7r0l",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/index.tsx",[],["81","82"],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/App.tsx",["83","84","85"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Hero from './components/Hero';\nimport NavBar from './components/NavBar';\nimport AboutMe from './components/AboutMe';\nimport ProjectGroup from './components/ProjectGroup';\nimport Contact from './components/Contact';\nimport PortfolioContext from './utils/context';\nimport ReviewGroup from './components/ReviewGroup';\n\nconst App: React.FC = () => {\n  const [portfolioState, setPortfolioState] = useState({\n    width: window.innerWidth,\n    projectArrangement: [0,1,2,3],\n    rearrange: (projectArrangement: number[]) => {\n      setPortfolioState({...portfolioState, width: window.innerWidth, projectArrangement: projectArrangement})\n    },\n  })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setPortfolioState({...portfolioState, width: window.innerWidth})\n    }\n    window.addEventListener('resize', handleResize)\n  }, [])\n\n  return (\n    <PortfolioContext.Provider value={portfolioState}>\n      <div className=\"App\">\n        <NavBar />\n        <Hero />\n        <AboutMe />\n        <ProjectGroup />\n        <Contact />\n      </div>\n    </PortfolioContext.Provider>\n  );\n};\n\nexport default App;\n","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Contact/index.tsx",["86","87"],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Hero/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/AboutMe/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/NavBar/index.tsx",["88"],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectGroup/index.tsx",["89"],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/IconRow/index.tsx",["90"],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectImage/index.tsx",["91","92","93"],"import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport winehubImg from '../../assets/winePortfolio.png';\nimport worthHomePortfolio from '../../assets/worthHomePortfolio.png';\nimport litjoyPortfolio from '../../assets/litjoyPortfolio.png';\nimport nodeSortlyShipstation from '../../assets/nodeSortlyShipstation.png';\n\nconst ProjectImage: React.FC<{ image: number; active: string }> = (props) => {\n  const [ classes, setClasses ] = useState<string>('still-img');\n  const imgPick = (image: number) => {\n    switch (image) {\n      case 0:\n        return worthHomePortfolio;\n      case 1:\n        return litjoyPortfolio;\n      case 2:\n        return winehubImg;\n      case 3:\n        return nodeSortlyShipstation;\n      default:\n        return litjoyPortfolio;\n    }\n  };\n\n  return (\n    <div>\n      <img\n        className={'still-img'}\n        src={imgPick(props.image)}\n        alt=\"wine hub\"\n      />\n    </div>\n  );\n};\n\nexport default ProjectImage;\n","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectIcons/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectDesc/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectGoTo/index.tsx",["94","95"],"import React from 'react';\nimport '../../global.css';\nimport './style.css';\nimport data from '../../data.json';\nimport { AiFillGithub } from 'react-icons/ai';\nimport { BsBoxArrowUpRight } from 'react-icons/bs';\n\nconst ProjectGoTo: React.FC<{ index: number }> = (props) => {\n  return (\n    <div className={'icongroup'}>\n      {data.projects[props.index].git !== '' ? (\n        <a href={data.projects[props.index].git} target={'_blank'}>\n          <AiFillGithub className={'icon'} />\n        </a>\n      ) : (\n        ''\n      )}\n      {data.projects[props.index].link !== '' ? (\n        <a href={data.projects[props.index].link} target={'_blank'}>\n          <BsBoxArrowUpRight className={'icon'} />\n        </a>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default ProjectGoTo;\n","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/utils/context.tsx",["96"],"import React from 'react';\n\ninterface PortfolioContext {\n    width: number,\n    projectArrangement: number[],\n    rearrange: (projectArrangement: number[]) => void,\n}\n\nconst PortfolioContext = React.createContext({\n    width: window.innerWidth,\n    projectArrangement: [0,1,2,3,4],\n    rearrange: (projectArrangement: number[]) => {},\n});\n\nexport default PortfolioContext;","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ProjectRenderer/index.tsx",["97"],"import React, { useContext } from \"react\";\nimport PortfoioContext from \"../../utils/context\";\nimport ProjectImage from '../ProjectImage';\nimport data from '../../data.json';\n\ninterface Props {\n  onChange: (newValue: number) => void,\n  projectIndex: number\n}\n\nconst ProjectRenderer: React.FC<Props> = (props) => {\n  const { width, projectArrangement } = useContext(PortfoioContext)\n\n  return (\n    <div className={`project-images`}>\n      <ProjectImage active={props.projectIndex === 0 ? 'true' : 'false'} image={data.projects[projectArrangement[0]].image} />\n    </div>\n  );\n};\n\nexport default ProjectRenderer;\n","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ArrowBar/index.tsx",["98","99"],"import React, { useContext, useState, useEffect } from 'react';\nimport './style.css';\nimport PortfoioContext from \"../../utils/context\";\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from 'react-icons/fa';\nimport { GoPrimitiveDot } from 'react-icons/go';\n\ninterface Props {\n    onChange: (newValue: number) => void\n}\n\nconst ArrowBar: React.FC<Props> = (props) => {\n    const context = useContext(PortfoioContext)\n    const imagesInView = 1\n\n    const imageRearranger = (direction: string) => {\n        let newArray: any = [...context.projectArrangement]\n        if (direction === 'forward') {\n            newArray.unshift(newArray.pop())\n            return newArray\n        } else if (direction === 'backward') {\n            newArray.push(newArray.shift())\n            return newArray\n        }\n    }\n\n    const dotRenderer = () => {\n        return (<div>\n            {context.projectArrangement.map((project, index) => (\n                <div className={(context.projectArrangement.slice(0,imagesInView)).includes(index)? 'dot active' : 'dot'}><GoPrimitiveDot /></div>\n            ))}\n            </div>);\n    }\n\n    return (\n        <div className={'arrow-container'}>\n            <div className={'icon-container'}>\n                <FaAngleDoubleLeft size={30} color={'#37394e'} className={'arrows'} onClick={() => \n                    context.rearrange(imageRearranger('forward'))\n                    }/>\n                {dotRenderer()}\n                <FaAngleDoubleRight size={30} color={'#37394e'} className={'arrows'} onClick={() => context.rearrange(imageRearranger('backward'))}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrowBar;","/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/ReviewGroup/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/Review/index.tsx",[],"/Users/garyburner/code/random_projects/heroku-ts/ts-portfolio/src/components/CollapsibleContact/index.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},{"ruleId":"104","severity":1,"message":"108","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":24,"column":6,"nodeType":"111","endLine":24,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":11,"column":66,"nodeType":"115","endLine":11,"endColumn":83},{"ruleId":"113","severity":1,"message":"114","line":14,"column":57,"nodeType":"115","endLine":14,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":36,"column":134,"nodeType":"115","endLine":36,"endColumn":151},{"ruleId":"104","severity":1,"message":"108","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":19},{"ruleId":"104","severity":1,"message":"116","line":15,"column":10,"nodeType":"106","messageId":"107","endLine":15,"endColumn":25},{"ruleId":"104","severity":1,"message":"117","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"118","line":9,"column":11,"nodeType":"106","messageId":"107","endLine":9,"endColumn":18},{"ruleId":"104","severity":1,"message":"119","line":9,"column":20,"nodeType":"106","messageId":"107","endLine":9,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":12,"column":50,"nodeType":"115","endLine":12,"endColumn":67},{"ruleId":"113","severity":1,"message":"114","line":19,"column":51,"nodeType":"115","endLine":19,"endColumn":68},{"ruleId":"120","severity":1,"message":"121","line":9,"column":7,"nodeType":"106","messageId":"122","endLine":9,"endColumn":23},{"ruleId":"104","severity":1,"message":"123","line":12,"column":11,"nodeType":"106","messageId":"107","endLine":12,"endColumn":16},{"ruleId":"104","severity":1,"message":"124","line":1,"column":29,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"117","line":1,"column":39,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'ReviewGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'portfolioState'. Either include it or remove the dependency array. You can also do a functional update 'setPortfolioState(p => ...)' if you only need 'portfolioState' in the 'setPortfolioState' call.","ArrayExpression",["127"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'BsBootstrapFill' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'setClasses' is assigned a value but never used.","@typescript-eslint/no-redeclare","'PortfolioContext' is already defined.","redeclared","'width' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [portfolioState]",{"range":"130","text":"131"},[901,903],"[portfolioState]"]